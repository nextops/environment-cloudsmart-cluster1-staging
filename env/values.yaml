PipelineSecrets: {}
cleanup:
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --cleanup
expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --v
  - 4
  config:
    domain: ci.cloudsmart.io
    exposer: Ingress
    http: "true"
    tlsSecretName: tls-ci.cloudsmart.io-p
    tlsacme: "false"
    urltemplate: '{{.Service}}-{{.Namespace}}.{{.Domain}}'
  production: true
jenkins:
  Servers:
    Global: {}
prow: {}
dex:
  replicas: 1

  grpc: false

  https: false

  ports:
    web:
      containerPort: 5556
      nodePort: 32000
      servicePort: 32000

  service:
    type: ClusterIP
    annotations: {}
  
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    path: /dex
    hosts:
      - dex-staging.ci.cloudsmart.io
      - comments-service-jx-staging.ci.cloudsmart.io
      - dex-client-poc.jx-cloudsmartio-dex-client-poc-pr-2.ci.cloudsmart.io
    tls: []
  
  config:
    issuer: http://dex-staging.ci.cloudsmart.io/dex
    storage:
      type: kubernetes
      config:
        inCluster: true
    logger:
      level: debug
    web:
      address: 0.0.0.0

    staticClients:
      - id: dex-client-poc
        redirectURIs:
          - 'http://dex-client-poc-jx-staging.ci.cloudsmart.io/callback'
        name: 'Dex Client POC'
        secret: vault:cloudsmart-cluster1/dex-client-poc:secret

    connectors:
      - type: github
        id: github
        name: github
        config:
          clientID: vault:cloudsmart-cluster1/github-oauth:clientID
          clientSecret: vault:cloudsmart-cluster1/github-oauth:clientSecret
          redirectURI: http://dex-staging.ci.cloudsmart.io/dex/callback

    oauth2:
      alwaysShowLoginScreen: true
      skipApprovalScreen: true

