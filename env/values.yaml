PipelineSecrets: {}
apm-mongodb:
  mongodbSystemLogVerbosity: 1
  usePassword: false
cleanup:
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --cleanup
comments-service-mongodb:
  mongodbSystemLogVerbosity: 1
  usePassword: false
dex:
  image: quay.io/dexidp/dex
  imageTag: "v2.21.0"
  config:
    connectors:
    - config:
        clientID: vault:cloudsmart-cluster1/github-oauth:clientID
        clientSecret: vault:cloudsmart-cluster1/github-oauth:clientSecret
        getUserInfo: true
        redirectURI: http://staging.ci.cloudsmart.io/dex/callback
        scopes:
        - openid
        - email
        - profile
        - groups
        - federated:id
      id: github
      name: github
      type: github
    issuer: http://staging.ci.cloudsmart.io/dex
    logger:
      level: debug
    oauth2:
      alwaysShowLoginScreen: false
      skipApprovalScreen: true
    enablePasswordDB: false
    storage:
      config:
        inCluster: true
      type: kubernetes
    web:
      address: 0.0.0.0
  grpc: false
  https: false
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
    enabled: true
    path: /dex
    tls: []
    # - hosts:
    #   - authservice-jx-staging.ci.cloudsmart.io
    #   secretName: tls-ci-cloudsmart-io-p
  ports:
    web:
      containerPort: 5556
      nodePort: 32000
      servicePort: 32000
  replicas: 1
  service:
    annotations: {}
    type: ClusterIP
jenkins:
  Servers:
    Global: {}
notifications-service-mongodb:
  mongodbSystemLogVerbosity: 1
  usePassword: false
prow: {}
userservice-mongodb:
  mongodbSystemLogVerbosity: 1
  usePassword: false
application-root:
  ingress:
    # enabled: true
    ## Add custom labels
  #  labels:
  #    foo: bar
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'false'
    ## If you plan to use TLS backend with enableInsecureLogin set to false
    ## (default), you need to uncomment the below.
    ## If you use ingress-nginx < 0.21.0
    #   nginx.ingress.kubernetes.io/secure-backends: "true"
    ## if you use ingress-nginx >= 0.21.0
    #   nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

    host: staging.ci.cloudsmart.io

    ## Ingress paths
    ##
    paths:
      - path: /()(assets/apm.*)
        backend:
          serviceName: agile-project-manager-frontend
          servicePort: 80
      - path: /()(dex.*)
        backend:
          serviceName: jx-dex
          servicePort: 32000
      - path: /(api)/(projects|issues|pulls|sprints.*)
        backend:
          serviceName: agile-project-manager
          servicePort: 80
      - path: /(api)/(auth.*)
        backend:
          serviceName: authservice
          servicePort: 80
      - path: /(api)/(user.*)
        backend:
          serviceName: userservice
          servicePort: 80
      - path: /()(.*)
        backend:
          serviceName: application-root
          servicePort: 80
authservice:
  secret:
    secret: "vault:cloudsmart-cluster1/authservice:secret"
    private_key: "vault:cloudsmart-cluster1/authservice:private_key"
  envFrom:
    - secretRef:
        name: secret
gitprovider-sync-agent:
  secret:
    access_token: "vault:cloudsmart-cluster1/gitprovider-sync-agent:access_token"
    github_client_secret: "vault:cloudsmart-cluster1/gitprovider-sync-agent:github_client_secret"
    private_key: "vault:cloudsmart-cluster1/gitprovider-sync-agent:private_key"
    webhook_secret: "vault:cloudsmart-cluster1/gitprovider-sync-agent:webhook_secret"
  envFrom:
    - secretRef:
        name: secret
