PipelineSecrets: {}
cleanup:
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --cleanup
dex:
  config:
    connectors:
    - config:
        clientID: vault:cloudsmart-cluster1/github-oauth:clientID
        clientSecret: vault:cloudsmart-cluster1/github-oauth:clientSecret
        redirectURI: http://dex-staging.ci.cloudsmart.io/dex/callback
      id: github
      name: github
      type: github
    issuer: http://dex-staging.ci.cloudsmart.io/dex
    logger:
      level: debug
    oauth2:
      alwaysShowLoginScreen: true
      skipApprovalScreen: true
    staticClients:
    - id: dex-client-poc
      name: Dex Client POC
      redirectURIs:
      - http://dex-client-poc-jx-staging.ci.cloudsmart.io/callback
      secret: vault:cloudsmart-cluster1/dex-client-poc:secret
    storage:
      config:
        inCluster: true
      type: kubernetes
    web:
      address: 0.0.0.0
  grpc: false
  https: false
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
    enabled: true
    hosts:
      - dex-staging.ci.cloudsmart.io
      - comments-service-jx-staging.ci.cloudsmart.io
      - dex-client-poc-jx-staging.ci.cloudsmart.io   
    path: /dex
    tls:
      - secretName: tls-ci-cloudsmart-io-p
        hosts:
          - dex.example.com
  ports:
    web:
      containerPort: 5556
      nodePort: 32000
      servicePort: 32000
  replicas: 1
  service:
    annotations: {}
    type: ClusterIP
expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --v
  - 4
  config:
    domain: ci.cloudsmart.io
    exposer: Ingress
    http: "false"
    tlsSecretName: tls-ci-cloudsmart-io-p
    tlsacme: "true"
    urltemplate: '{{.Service}}-{{.Namespace}}.{{.Domain}}'
  production: true
jenkins:
  Servers:
    Global: {}
prow: {}
